{"version":3,"sources":["FanChart.js","BarChart.js","App.js","serviceWorker.js","index.js"],"names":["FanChart","chartRef","React","createRef","Runtime","module","define","name","Inspector","current","redefine","this","props","uf","className","ref","Component","BarChart","App","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.33c2238a.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {Runtime, Library, Inspector} from \"@observablehq/runtime\";\nimport define from \"@jefersonalves/fan-chart\";\n\nclass FanChart extends Component {\n    chartRef = React.createRef();\n\n    componentDidMount() {\n        const runtime = new Runtime();\n\n        const main = runtime.module(define, name => {\n            if (name === \"chart\") {\n                return new Inspector(this.chartRef.current);\n            }\n        });\n\n        main.redefine(\"state\", this.props.uf);\n    }\n\n    render() {\n        return (\n            <div className=\"FanChart\">\n                <div ref={this.chartRef}></div>\n            </div>\n        );\n    }\n}\n\nexport default FanChart;","import React, {Component} from \"react\";\nimport {Runtime, Library, Inspector} from \"@observablehq/runtime\";\nimport define from \"@jefersonalves/rt-chart\";\n\nclass BarChart extends Component {\n    chartRef = React.createRef();\n\n    componentDidMount() {\n        const runtime = new Runtime();\n        //runtime.module(define, Inspector.into(this.animationRef.current));\n        // runtime.module(define, name => {\n        //   if (name === \"chart\") {\n        //     return new Inspector.into(this.animationRef.current);\n        //   }\n        // })\n    \n        runtime.module(define, name => {\n          if (name === \"chart\") {\n            return new Inspector(this.chartRef.current);\n          }\n        });\n      }\n    \n      render() {\n        return (\n          <div className=\"BarChart\">\n            <div ref={this.chartRef}></div>\n          </div>\n        );\n      }\n}\n\nexport default BarChart;","import React from 'react';\nimport FanChart from './FanChart.js'\nimport BarChart from './BarChart';\nimport './App.css';\n\nfunction App() {\n    return (\n    <>\n        <div className=\"bodyPage\">\n            <h1>R<sub>t</sub> Covid-19</h1>\n            <p className=\"hackcovid\">O que é o HackCovid?</p>\n            <p className=\"hackcoviddescription\">É um projeto social que tem como objetivo auxiliar na diminuição do impacto do covid-19 \n            através de dados e machine learning. Nossa missão é calcular e mostrar em tempo real o Rt (número de reprodução do \n            vírus no tempo t) do covid-19 de todos os estados do Brasil. Uma vez com acesso a este dashboard, \n            o cidadão brasileiro consegue entender como o virus está se espalhando e quão efetivo estão sendo as \n            medidas de quarentena em sua região. E os governos estaduais, com a visão do Rt, conseguem avaliar melhor as\n             medidas de restrição, para maximizar tanto a prosperidade econômica quanto a saúde e segurança de sua população.\n            </p>\n            <p className=\"whatsRt\">O que é o Rt?</p>\n            <p className=\"answerRt\">Rt é o numero de reprodução do vírus no tempo t. Esse número descreve a média de  \n            pessoas que são contaminadas por pessoa infectada. A forma mais conhecida dessa métrica é o número básico \n            de reprodução, R0 (r-zero) quando t=0. O problema do R0 é que ele não adapta a mudanças de comportamento ou \n            restrições governamentais e sociais, ele é fixo.\n            Na forma que a pandemia evolui e as restrições aumentam ou diminuem, o Rt também muda. Quando Rt > 1, a \n            pandemia espalha para uma porção grande da população. Se o Rt menor que 1, a pandemia diminui rapidamente antes de \n            infectar muita gente.\n            Inspirados pelo <a className=\"link\" href=\"https://github.com/k-sys/covid-19/blob/master/Realtime%20R0.ipynb\">notebook</a> do Kevin Systrom, reproduzimos o modelo utilizando os dados do Brasil.\n            </p>\n            <p className=\"States\">Comparação entre estados</p>\n            <p className=\"latestWeek\">Último Dia</p>\n            <BarChart></BarChart>\n            <div className=\"allState\">\n                <div className=\"uniqueState\">\n                    <p>Acre</p>\n                    <FanChart className=\"state\" uf={\"AC\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Alagoas</p>\n                    <FanChart className=\"state\" uf={\"AL\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Amapá</p>\n                    <FanChart className=\"state\" uf={\"AP\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Amazonas</p>\n                    <FanChart className=\"state\" uf={\"AM\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Bahia</p>\n                    <FanChart className=\"state\" uf={\"BA\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Ceará</p>\n                    <FanChart className=\"state\" uf={\"CE\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Distrito Federal</p>\n                    <FanChart className=\"state\" uf={\"DF\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Espírito Santo</p>\n                    <FanChart className=\"state\" uf={\"ES\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Goiás</p>\n                    <FanChart className=\"state\" uf={\"GO\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Maranhão</p>\n                    <FanChart className=\"state\" uf={\"MA\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Mato Grosso</p>\n                    <FanChart className=\"state\" uf={\"MT\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Mato Grosso do Sul</p>\n                    <FanChart className=\"state\" uf={\"MS\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Minas Gerais</p>\n                    <FanChart className=\"state\" uf={\"MG\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Pará</p>\n                    <FanChart className=\"state\" uf={\"PA\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Paraíba</p>\n                    <FanChart className=\"state\" uf={\"PB\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Paraná</p>\n                    <FanChart className=\"state\" uf={\"PR\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Pernambuco</p>\n                    <FanChart className=\"state\" uf={\"PB\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Piauí</p>\n                    <FanChart className=\"state\" uf={\"PI\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Rio de Janeiro</p>\n                    <FanChart className=\"state\" uf={\"RJ\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Rio Grande do Norte</p>\n                    <FanChart className=\"state\" uf={\"RN\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Rio Grande do Sul</p>\n                    <FanChart className=\"state\" uf={\"RS\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Rondônia</p>\n                    <FanChart className=\"state\" uf={\"RO\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Roraima</p>\n                    <FanChart className=\"state\" uf={\"RR\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Santa Catarina</p>\n                    <FanChart className=\"state\" uf={\"SC\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>São Paulo</p>\n                    <FanChart className=\"state\" uf={\"SP\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Sergipe</p>\n                    <FanChart className=\"state\" uf={\"SE\"}></FanChart>\n                </div>\n                <div className=\"uniqueState\">\n                    <p>Tocantins</p>\n                    <FanChart className=\"state\" uf={\"TO\"}></FanChart>\n                </div>\n            </div>\n        </div>\n            <br></br>\n            <div className=\"Footer\">\n                <br></br>\n                <br></br>\n            </div>\n        </>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can chan$\n// unregister() to register() below. Note this comes with some pitfal$\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}